import json
import sys
from urllib import *
import argparse
from urllib.parse import urlparse, urlencode, parse_qs
from urllib.request import  urlopen


YOUTUBE_COMMENT_URL = 'https://www.googleapis.com/youtube/v3/commentThreads'
YOUTUBE_SEARCH_URL = 'https://www.googleapis.com/youtube/v3/search'


def openURL(url,parms):
    f = urlopen(url + '?' + urlencode(parms))
    data = f.read()
    f.close()
    matches = data.decode("utf-8")
    return matches

def load_search_res(search_response):
    videos, channels, playlists = [], [], []
    with open ('Results12.txt', 'a', encoding="utf-8") as f:
        for search_result in search_response.get("items", []):
            if search_result["id"]["kind"] == "youtube#video":
                videos.append("{} ({})".format(search_result["snippet"]["title"],
                                            search_result["id"]["videoId"]))
            elif search_result["id"]["kind"] == "youtube#channel":
                channels.append("{} ({})".format(search_result["snippet"]["title"],
                                            search_result["id"]["channelId"]))
            elif search_result["id"]["kind"] == "youtube#playlist":
                playlists.append("{} ({})".format(search_result["snippet"]["title"],
                                search_result["id"]["playlistId"]))

        f.write("Videos:")
        f.write("\n".join(videos))
        f.write("\n")
        f.write("Channels:")
        f.write("\n".join(channels))
        f.write("\n")
        f.write("Playlists:")
        f.write( "\n".join(playlists))
        f.write("\n")

def search_keyword():
    parser = argparse.ArgumentParser()


    search="google"
    key="YOURAPIKEY"
    max=50
    r="IN"
    parms = {
                'q': search,
                'part': 'id,snippet',
                'maxResults': max,
                'regionCode': r,
                'key': key
            }

    try:
        matches = openURL(YOUTUBE_SEARCH_URL, parms)

        search_response = json.loads(matches)
        i = 2

        nextPageToken = search_response.get("nextPageToken")

        print("\nPage : 1 --- Region : {}".format(r))
        print("------------------------------------------------------------------")
        load_search_res(search_response)

        while nextPageToken:
            parms.update({'pageToken': nextPageToken})
            matches = openURL(YOUTUBE_SEARCH_URL, parms)

            search_response = json.loads(matches)
            nextPageToken = search_response.get("nextPageToken")
            print("Page : {} --- Region : {}".format(i, r))
            print("------------------------------------------------------------------")

            load_search_res(search_response)

            i += 1

    except KeyboardInterrupt:
        print("User Aborted the Operation")

    except:
        print("Cannot Open URL or Fetch comments at a moment")

search_keyword()
